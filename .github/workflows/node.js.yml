# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Acebook CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js v23.10
      uses: actions/setup-node@v4
      with:
        node-version: 23.10
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Setup MongoDB
      run: |
        sudo apt-get install gnupg curl
        curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor
        echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org
        sudo systemctl start mongod
    - name: Start test server
      run: npm run start:test &
    - run: sleep 5
    - name: Run tests
      run: npm test

  deploy:
    needs: Build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Install zip utility
        run: sudo apt-get update && sudo apt-get install -y zip
      - name: Zip contents into acebook.zip
        run: zip -r acebook.zip .
      - name: Deploy static site to S3 bucket
        run: aws s3 cp ./acebook.zip s3://teamneo-bucket
      - name: Create CodeDeploy deployment
        run: aws deploy create-deployment --application-name teamneo-acebook --deployment-group-name teamneo-acebook-depgrp \--revision "{\"revisionType\":\"S3\", \"s3Location\" {\"bucket\":\"teamneo-bucket\", \"key\":\"acebook.zip\", \"bundleType\":\"zip\"}}"
